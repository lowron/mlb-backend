{\rtf1\ansi\ansicpg1252\cocoartf2822
\cocoatextscaling0\cocoaplatform0{\fonttbl\f0\fnil\fcharset0 HelveticaNeue;}
{\colortbl;\red255\green255\blue255;}
{\*\expandedcolortbl;;}
\margl1440\margr1440\vieww11520\viewh8400\viewkind0
\deftab560
\pard\pardeftab560\slleading20\pardirnatural\partightenfactor0

\f0\fs26 \cf0 import express from 'express';\
import cors from 'cors';\
import bodyParser from 'body-parser';\
import dotenv from 'dotenv';\
\
import \{ syncMLBData \} from './services/syncMLBData';\
import \{ getPredictions \} from './services/aiPredictor';\
\
dotenv.config();\
const app = express();\
const PORT = process.env.PORT || 3001;\
\
app.use(cors());\
app.use(bodyParser.json());\
\
app.get('/api/sync', async (req, res) => \{\
  try \{\
    const result = await syncMLBData();\
    res.json(\{ message: 'Sync complete', result \});\
  \} catch (err: any) \{\
    res.status(500).json(\{ error: err.message \});\
  \}\
\});\
\
app.get('/api/predictions', async (req, res) => \{\
  const predictions = await getPredictions();\
  res.json(predictions);\
\});\
\
app.listen(PORT, () => console.log(`Server running on port $\{PORT\}`));\
\
}